name: Elixir CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.11.4' # Define the elixir version [required]
        otp-version: '23.1' # Define the OTP version [required]
      env:
        ImageOS: ubuntu20
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install postgres
      run: |
        sudo apt-get update
        sudo apt-get install gpg
        sudo curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
        sudo echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list
        sudo apt-get update
        sudo apt-get install postgresql-11 postgresql-client-11
    - name: Crete database user
      run: |
        sudo -u postgres createuser root
        sudo -u postgres psql -c "alter user root with createdb;"
        sudo -u postgres psql -c "alter user root with password 'root';"
    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      run: |
        export MIX_ENV=test
        mix ecto.create
        mix test
